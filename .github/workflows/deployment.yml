name: Deploy

on:
  issue_comment:
    types: [created]
env:
  mapping: '{"development": "111", "staging": "222", "production": "333"}'

permissions:
  pull-requests: write
  contents: write
  deployments: write
  checks: read
  statuses: write

jobs:

  # Extracts Enviroment / Target from PR Comment
  validate-deployment:
    env:
      reactions: '{"true": "+1", "false": "-1"}'
    outputs:
      matrix: ${{ steps.extract-data.outputs.matrix }}
      is-valid-environment: ${{ steps.extract-data.outputs.is-valid-environment }}
      is-valid-lambdas-deployment: ${{ steps.extract-data.outputs.is-valid-lambdas-deployment }}
      is-valid-api-deployment: ${{ steps.extract-data.outputs.is-valid-api-deployment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: ./.github/actions/deploy-prepare
        id: extract-data

      - name: Set Env
        run: |
          echo ${{steps.extract-data.outputs.is-valid-lambdas-deployment}}
          echo "is-valid-deployment=${{ (steps.extract-data.outputs.is-valid-lambdas-deployment == 'true' || steps.validate-deployment.outputs.is-valid-api-deployment == 'true') && steps.validate-deployment.outputs.is-valid-environment == 'true' }}" >> ${GITHUB_ENV}

      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with:
          trigger: 'deploy' # no trigger cause at this point we are already valid
          reaction: '${{ fromJson(env.reactions)[env.is-valid-deployment] }}'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          
      - name: Early Quit
        if: env.is-valid-deployment == 'false'
        run: exit 1

  # Deploy Lambdas
  deploy-lambdas:
    needs: [validate-deployment]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.validate-deployment.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.validate-deployment.outputs.matrix)[0].environment }}
    if: needs.validate-deployment.outputs.is-valid-lambdas-deployment == 'true'
    runs-on: ubuntu-latest
    steps:
    
      # Checkout
      - uses: actions/checkout@v3
      - name: echo
        run: |
          echo 'account: ${{fromJSON(env.mapping)[matrix.environment]}}'

  # Deploy Lambdas
  deploy-api:
    needs: [validate-deployment]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.validate-deployment.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.validate-deployment.outputs.matrix)[0].environment }}
    if: needs.validate-deployment.outputs.is-valid-api-deployment == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      checks: read
      statuses: write
    steps:
    
      # Checkout
      - uses: actions/checkout@v3