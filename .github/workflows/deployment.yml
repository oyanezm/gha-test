name: Deploy

on:
  issue_comment:
    types: [created]
env:
  mapping: '{"development": "111", "staging": "222", "production": "333"}'

jobs:

  # Extracts Enviroment / Target from PR Comment
  extract-data:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix}}
      is-valid-environment: ${{ steps.validator.outputs.environment }}
      is-valid-lambda-deployment: ${{ steps.validator.outputs.lambda }}
      is-valid-api-deployment: ${{ steps.validator.outputs.api }}
    steps:
    
    # Parse Comment
    - name: Get PR comment
      uses: actions-ecosystem/action-regex-match@v2
      id: get-pr-comment
      with:
        text: ${{ github.event.comment.body }}
        regex: '^(deploy) (lambdas|api) (development|staging|production)$'
      
    - name: Extract Environment
      id: matrix
      run: |
        echo "matrix=[{ \"target\" : [\"${{ steps.get-pr-comment.outputs.group2 }}\"], \"environment\": [\"${{ steps.get-pr-comment.outputs.group3 }}\"] }]" >> "$GITHUB_OUTPUT"

    - name: Extract Validator
      id: validator
      run: |
        echo "environment=${{ fromJSON(env.mapping)[steps.get-pr-comment.outputs.group3] }}" >> "$GITHUB_OUTPUT"
        echo "lambda=${{ steps.get-pr-comment.outputs.group2 == 'lambdas' }}" >> "$GITHUB_OUTPUT"
        echo "api=${{ steps.get-pr-comment.outputs.group2 == 'api' }}" >> "$GITHUB_OUTPUT"

  # Deploy Lambdas
  deploy-lambdas:
    needs: extract-data
    strategy:
      matrix:
        target: ${{ fromJSON(needs.extract-data.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.extract-data.outputs.matrix)[0].environment }}
    if: needs.extract-data.outputs.is-valid-lambda-deployment && needs.extract-data.outputs.is-valid-environment
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      checks: read
      statuses: write
    steps:
    
      # Checkout
      - uses: actions/checkout@v3
      - name: echo
        run: |
          echo ${{ needs.extract-data.outputs.is-valid-environment }} 
          echo ${{ needs.extract-data.outputs.is-valid-api-deployment }} 
          echo ${{ needs.extract-data.outputs.is-valid-lambda-deployment }} 
          echo ${{ fromJSON(needs.extract-data.outputs.matrix)[0].target[0] }} 
          echo 'env: ${{fromJSON(env.mapping)}}'
          echo 'account: ${{fromJSON(env.mapping)[matrix.environment]}}'

  # Deploy Lambdas
  deploy-api:
    needs: extract-data
    strategy:
      matrix:
        target: ${{ fromJSON(needs.extract-data.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.extract-data.outputs.matrix)[0].environment }}
    if: needs.extract-data.outputs.is-valid-api-deployment && needs.extract-data.outputs.is-valid-environment
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      checks: read
      statuses: write
    steps:
    
      # Checkout
      - uses: actions/checkout@v3