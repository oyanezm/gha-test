name: Deploy

on:
  issue_comment:
    types: [created]
env:
  mapping: '{"development": "111", "staging": "222", "production": "333"}'

jobs:

  # Extracts Enviroment / Target from PR Comment
  prepare-data:
    outputs:
      matrix: ${{ steps.extract-data.outputs.matrix }}
      is-valid-environment: ${{ steps.extract-data.outputs.is-valid-environment }}
      is-valid-lambda-deployment: ${{ steps.extract-data.outputs.is-valid-lambda-deployment }}
      is-valid-api-deployment: ${{ steps.extract-data.outputs.is-valid-api-deployment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy-prepare
        id: extract-data

  validate-deployment:
    runs-on: ubuntu-latest
    needs: prepare-data
    steps:
      - uses: actions/checkout@v3

      - name: Early Quit
        # if: (needs.prepare-data.outputs.is-valid-lambda-deployment != 'true' && needs.prepare-data.outputs.is-valid-api-deployment != 'true') || !needs.prepare-data.outputs.is-valid-environment
        # if: (needs.prepare-data.outputs.is-valid-lambda-deployment != 'true' && needs.prepare-data.outputs.is-valid-api-deployment != 'true')
        # run: exit 1
        run: |
          echo ${{needs.prepare-data.outputs.is-valid-lambda-deployment}}
          echo ${{needs.prepare-data.outputs.is-valid-api-deployment}}
          exit 1

  # Deploy Lambdas
  deploy-lambdas:
    needs: [prepare-data, validate-deployment]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.prepare-data.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.prepare-data.outputs.matrix)[0].environment }}
    if: needs.prepare-data.outputs.is-valid-lambda-deployment == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      checks: read
      statuses: write
    steps:
    
      # Checkout
      - uses: actions/checkout@v3
      - name: echo
        run: |
          echo ${{ needs.prepare-data.outputs.is-valid-environment }} 
          echo ${{ needs.prepare-data.outputs.is-valid-api-deployment }} 
          echo ${{ needs.prepare-data.outputs.is-valid-lambda-deployment }} 
          echo ${{ fromJSON(needs.prepare-data.outputs.matrix)[0].target[0] }} 
          echo 'env: ${{fromJSON(env.mapping)}}'
          echo 'account: ${{fromJSON(env.mapping)[matrix.environment]}}'

  # Deploy Lambdas
  deploy-api:
    needs: [prepare-data, validate-deployment]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.prepare-data.outputs.matrix)[0].target }}
        environment: ${{ fromJSON(needs.prepare-data.outputs.matrix)[0].environment }}
    if: needs.prepare-data.outputs.is-valid-api-deployment == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write
      checks: read
      statuses: write
    steps:
    
      # Checkout
      - uses: actions/checkout@v3